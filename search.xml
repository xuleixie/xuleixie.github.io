<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>autosar socket Adaptor类型和函数定义</title>
      <link href="/2024/01/02/autosar-socket-Adaptor%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/"/>
      <url>/2024/01/02/autosar-socket-Adaptor%E7%B1%BB%E5%9E%8B%E5%92%8C%E5%87%BD%E6%95%B0%E5%AE%9A%E4%B9%89/</url>
      
        <content type="html"><![CDATA[<p>L-PDU：与can Interface模块相关，等同于逻辑连接控制层（上一层是数据链路层，下一层是媒体访问控制层）<br>N-PDU：与CANTP相关联，等同于OSI的网络层。</p><p>ADAS: Advanced Driver Assistance Systems 先进驾驶辅助系统<br>ADS：Autonomous Driving System 自动驾驶系统</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>autosar基础知识</title>
      <link href="/2023/12/13/autosar%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
      <url>/2023/12/13/autosar%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是PDU-Router？"><a href="#什么是PDU-Router？" class="headerlink" title="什么是PDU Router？"></a>什么是PDU Router？</h2><p>PDU路由模块是autosar基础软件的一部分，每一个autosar ECU都必须实现；PDU路由模块的主要功能是将一个PDU从一个I-PDU端口路由到另一个I-PDU端口，路由的规则由配置文件决定，配置文件中定义了每一个I-PDU端口的路由规则。</p><h2 id="什么是I-PDU？"><a href="#什么是I-PDU？" class="headerlink" title="什么是I-PDU？"></a>什么是I-PDU？</h2><p>Interaction Layer Protocol Data Unit (I-PDU)是一个数据单元，它包含数据（buffer）、长度和I-PDU ID，PDU路由器主要路由多个I-PDU。</p><h2 id="什么是L-PDU？"><a href="#什么是L-PDU？" class="headerlink" title="什么是L-PDU？"></a>什么是L-PDU？</h2><p>Data Link Layer PDU，一个或多个I-PDU被打包成1个L-PDU。L-PDU是针对特定总线的，如CAN帧；</p><h2 id="什么是N-PDU？"><a href="#什么是N-PDU？" class="headerlink" title="什么是N-PDU？"></a>什么是N-PDU？</h2><p>网络层pdu，传输协议模块用来对I-PDU进行分片；<br>根据下图可知，L-PDU在最下面，然后是N-PDU，最上面是I-PDU，I-PDU是最原始的数据，N-PDU是对I-PDU的分片，L-PDU是对N-PDU的打包。<br><img src="/2023/12/13/autosar%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Snipaste_2023-12-13_14-09-13.png" alt="图1"></p><h2 id="详细的PDU路由结构"><a href="#详细的PDU路由结构" class="headerlink" title="详细的PDU路由结构"></a>详细的PDU路由结构</h2><p><img src="/2023/12/13/autosar%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Snipaste_2023-12-13_15-07-24.png" alt="图2"><br>PDU路由模块包含两部分：静态路由表和路由引擎；<br>路由引擎的作用：将I-PDU从源头路由到目的地；<br>将源头的I-PDU ID转换为目的地的I-PDU ID；</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CAN总线基础</title>
      <link href="/2023/12/12/TCP-IP%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/"/>
      <url>/2023/12/12/TCP-IP%E5%8D%8F%E8%AE%AE%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h2 id="CAN总线介绍"><a href="#CAN总线介绍" class="headerlink" title="CAN总线介绍"></a>CAN总线介绍</h2><p>CAN总线由博世公司开发，用于消息广播，最大速率达到1M bit&#x2F;s，不像传统的USB或以太网，CAN不会从一个节点发送大量数据到另一个节点，在CAN网络中，许多短消息（温度或转速）被广播到整个网络，在系统的每个节点上提供了数据的连续性。</p><h2 id="常用概念"><a href="#常用概念" class="headerlink" title="常用概念"></a>常用概念</h2><p>CSMA: Carrier Sense Multiple Access (载波监听多路访问)。<br>CSMA&#x2F;CD: Carrier Sense Multiple Access with Collision Detection (带冲突检测的载波监听多路访问)。<br>CSMA&#x2F;CA: Carrier Sense Multiple Access with Collision Avoidance (带冲突避免的载波监听多路访问)。<br>AMP：Arbitration on Message Priority (消息优先仲裁)。<br>BMP：Bit-wise Arbitration on Message Priority (消息优先位仲裁)。<br>BAM：Broadcast Arbitration on Message Priority (消息优先广播仲裁)。<br>CAN总线是一个多主机网络，在发送消息到CAN节点之前，会检测总线是否繁忙，也使用碰撞检测，在这一点上和以太网有些相似，然而当以太网检测到碰撞时，两个发送节点都会停止传输，再次尝试发送之前，他们会等待一个随机的时间。这使得以太网在高总线负载时非常敏感，CAN使用非常清晰的仲裁原则解决了这个问题。</p><h2 id="数据链路层任务"><a href="#数据链路层任务" class="headerlink" title="数据链路层任务"></a>数据链路层任务</h2><p>将网络层数据包封装成帧；</p><p>logic link control (LLC)：逻辑链路控制，负责处理数据链路层的错误和流控制。<br>Media Access Control (MAC)：媒体访问控制，负责处理数据链路层的物理层访问。<br>Physical Coding Sublayer (PCS)：物理编码子层，负责处理数据链路层的物理层编码。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用grpc技术构建前后端分离项目</title>
      <link href="/2023/12/12/%E4%BD%BF%E7%94%A8grpc%E6%8A%80%E6%9C%AF%E6%9E%84%E5%BB%BA%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE/"/>
      <url>/2023/12/12/%E4%BD%BF%E7%94%A8grpc%E6%8A%80%E6%9C%AF%E6%9E%84%E5%BB%BA%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="grpc介绍"><a href="#grpc介绍" class="headerlink" title="grpc介绍"></a>grpc介绍</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>网络代理导致npm install超时解决方案</title>
      <link href="/2023/12/11/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%AF%BC%E8%87%B4npm-install%E8%B6%85%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2023/12/11/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%AF%BC%E8%87%B4npm-install%E8%B6%85%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>当主机设置了代理服务器时，npm install会出现超时的情况，导致安装包失败。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><ol><li>设置代理服务器<br>查看本机的代理服务器地址：<br>打开网络连接，点击代理服务器设置，查看代理服务器地址和端口号。<br><img src="/2023/12/11/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%AF%BC%E8%87%B4npm-install%E8%B6%85%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231211175303.png" alt="代理服务器设置"><br><img src="/2023/12/11/%E7%BD%91%E7%BB%9C%E4%BB%A3%E7%90%86%E5%AF%BC%E8%87%B4npm-install%E8%B6%85%E6%97%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20231211175345.png" alt="代理服务器设置"><br>然后在命令行中设置代理服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> proxy http://127.0.0.1:52175</span><br></pre></td></tr></table></figure>使用以下命令查看当前的设置：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config list</span><br></pre></td></tr></table></figure>关于config的更多信息，可以查看npm的官方文档：<a href="https://docs.npmjs.com/cli/config">npm-config</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>qt中报错allocation of incomplete type Ui::解决方案</title>
      <link href="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在qt中创建ui的时候，一般有以下几步：<br>以sendFrameBox为例</p><ol><li>直接创建一个qt设计器界面类：<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/new_ui.png"></li><li>填写类名：<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/newclass.png"></li><li>选择界面模板：<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/choose_groupbox.png"></li><li>完成<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/success.png"></li></ol><h2 id="报错现象"><a href="#报错现象" class="headerlink" title="报错现象"></a>报错现象</h2><p>此时会提示找不到ui_sendframebox.h文件，因为只有build后才会产生该文件，但此时执行build，仍然会报错：<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/error.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>可以将ui初始化的代码先注释掉，<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/note.png"><br>然后build，build完成后再放开注释，此时就正常了：<br><img src="/2023/08/22/qt%E4%B8%AD%E6%8A%A5%E9%94%99allocation-of-incomplete-type-Ui-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/solved.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>cpp中的lambda表达式</title>
      <link href="/2023/08/18/cpp%E4%B8%AD%E7%9A%84lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2023/08/18/cpp%E4%B8%AD%E7%9A%84lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现字符串操作</title>
      <link href="/2023/07/27/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/"/>
      <url>/2023/07/27/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="1-字符串的定义"><a href="#1-字符串的定义" class="headerlink" title="1. 字符串的定义"></a>1. 字符串的定义</h2><p>字符串是由一个或多个字符组成的有限序列，又称为字符串常量。字符串常量是用双引号括起来的字符序列，如”hello”、”C语言”等。字符串常量是一种基本数据类型，它的实质是一维字符数组。字符串常量的长度是字符串中字符的个数加1，即字符串常量的长度等于字符数组的长度加1。例如，字符串常量”hello”的长度是6，字符数组的长度是5。</p><h2 id="2-字符串的输入输出"><a href="#2-字符串的输入输出" class="headerlink" title="2. 字符串的输入输出"></a>2. 字符串的输入输出</h2><h3 id="2-1-字符串的输入"><a href="#2-1-字符串的输入" class="headerlink" title="2.1 字符串的输入"></a>2.1 字符串的输入</h3><p>字符串的输入可以用scanf函数，也可以用gets函数。scanf函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br></pre></td></tr></table></figure><p>gets函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gets(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gets(str);</span><br></pre></td></tr></table></figure><h3 id="2-2-字符串的输出"><a href="#2-2-字符串的输出" class="headerlink" title="2.2 字符串的输出"></a>2.2 字符串的输出</h3><p>字符串的输出可以用printf函数，也可以用puts函数。printf函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,str);</span><br></pre></td></tr></table></figure><p>puts函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">puts</span>(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">puts</span>(str);</span><br></pre></td></tr></table></figure><h2 id="3-字符串的赋值"><a href="#3-字符串的赋值" class="headerlink" title="3. 字符串的赋值"></a>3. 字符串的赋值</h2><p>字符串的赋值可以用赋值运算符，也可以用strcpy函数。赋值运算符的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符串名=字符串;</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">str=<span class="string">&quot;hello&quot;</span>;</span><br></pre></td></tr></table></figure><p>strcpy函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcpy</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="4-字符串的连接"><a href="#4-字符串的连接" class="headerlink" title="4. 字符串的连接"></a>4. 字符串的连接</h2><p>字符串的连接可以用strcat函数。strcat函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcat</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcat</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="5-字符串的比较"><a href="#5-字符串的比较" class="headerlink" title="5. 字符串的比较"></a>5. 字符串的比较</h2><p>字符串的比较可以用strcmp函数。strcmp函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcmp</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcmp</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="6-字符串的长度"><a href="#6-字符串的长度" class="headerlink" title="6. 字符串的长度"></a>6. 字符串的长度</h2><p>字符串的长度可以用strlen函数。strlen函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strlen</span>(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strlen</span>(str);</span><br></pre></td></tr></table></figure><h2 id="7-字符串的复制"><a href="#7-字符串的复制" class="headerlink" title="7. 字符串的复制"></a>7. 字符串的复制</h2><p>字符串的复制可以用strncpy函数。strncpy函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strncpy</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>,复制的字符个数);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strncpy</span>(str1,str2,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="8-字符串的查找"><a href="#8-字符串的查找" class="headerlink" title="8. 字符串的查找"></a>8. 字符串的查找</h2><p>字符串的查找可以用strstr函数。strstr函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strstr</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strstr</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="9-字符串的分割"><a href="#9-字符串的分割" class="headerlink" title="9. 字符串的分割"></a>9. 字符串的分割</h2><p>字符串的分割可以用strtok函数。strtok函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strtok(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strtok(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="10-字符串的转换"><a href="#10-字符串的转换" class="headerlink" title="10. 字符串的转换"></a>10. 字符串的转换</h2><p>字符串的转换可以用atoi函数、atol函数、atof函数。atoi函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atoi(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atoi(str);</span><br></pre></td></tr></table></figure><p>atol函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atol(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atol(str);</span><br></pre></td></tr></table></figure><p>atof函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atof(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">atof(str);</span><br></pre></td></tr></table></figure><h2 id="11-字符串的填充"><a href="#11-字符串的填充" class="headerlink" title="11. 字符串的填充"></a>11. 字符串的填充</h2><p>字符串的填充可以用memset函数。memset函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(字符串名,填充的字符,填充的字符个数);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">memset</span>(str,<span class="string">&#x27;*&#x27;</span>,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="12-字符串的反转"><a href="#12-字符串的反转" class="headerlink" title="12. 字符串的反转"></a>12. 字符串的反转</h2><p>字符串的反转可以用strrev函数。strrev函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strrev(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strrev(str);</span><br></pre></td></tr></table></figure><h2 id="13-字符串的大小写转换"><a href="#13-字符串的大小写转换" class="headerlink" title="13. 字符串的大小写转换"></a>13. 字符串的大小写转换</h2><p>字符串的大小写转换可以用strupr函数、strlwr函数。strupr函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strupr(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strupr(str);</span><br></pre></td></tr></table></figure><p>strlwr函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strlwr(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strlwr(str);</span><br></pre></td></tr></table></figure><h2 id="14-字符串的排序"><a href="#14-字符串的排序" class="headerlink" title="14. 字符串的排序"></a>14. 字符串的排序</h2><p>字符串的排序可以用strsort函数。strsort函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strsort(字符串名);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strsort(str);</span><br></pre></td></tr></table></figure><h2 id="15-字符串的插入"><a href="#15-字符串的插入" class="headerlink" title="15. 字符串的插入"></a>15. 字符串的插入</h2><p>字符串的插入可以用strins函数。strins函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strins(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>,插入的位置);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strins(str1,str2,<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h2 id="16-字符串的删除"><a href="#16-字符串的删除" class="headerlink" title="16. 字符串的删除"></a>16. 字符串的删除</h2><p>字符串的删除可以用strdel函数。strdel函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strdel(字符串名,删除的位置,删除的字符个数);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strdel(str,<span class="number">5</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="17-字符串的替换"><a href="#17-字符串的替换" class="headerlink" title="17. 字符串的替换"></a>17. 字符串的替换</h2><p>字符串的替换可以用strrep函数。strrep函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strrep(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>,替换的位置,替换的字符个数);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strrep(str1,str2,<span class="number">5</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="18-字符串的比较"><a href="#18-字符串的比较" class="headerlink" title="18. 字符串的比较"></a>18. 字符串的比较</h2><p>字符串的比较可以用strcmp函数。strcmp函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcmp</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strcmp</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="19-字符串的查找"><a href="#19-字符串的查找" class="headerlink" title="19. 字符串的查找"></a>19. 字符串的查找</h2><p>字符串的查找可以用strstr函数。strstr函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strstr</span>(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">strstr</span>(str1,str2);</span><br></pre></td></tr></table></figure><h2 id="20-字符串的分割"><a href="#20-字符串的分割" class="headerlink" title="20. 字符串的分割"></a>20. 字符串的分割</h2><p>字符串的分割可以用strtok函数。strtok函数的格式为：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strtok(字符串名<span class="number">1</span>,字符串名<span class="number">2</span>);</span><br></pre></td></tr></table></figure><p>例如：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strtok(str1,str2);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
